PROJECT STRUCTURE ;

portfolio/
│
├── static/
│   ├── style.css
│
├── templates/
│   ├── index.html
│   ├── projects.html
│   ├── contact.html
│
├── app.py
└── README.md




STEP BY STEP PYTHON CODE(WITH FLASK);


from flask import Flask, render_template, request

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/projects')
def projects():
    return render_template('projects.html')

@app.route('/contact', methods=['GET', 'POST'])
def contact():
    if request.method == 'POST':
        name = request.form.get('name')
        email = request.form.get('email')
        message = request.form.get('message')
        # Normally you would store or send this information
        print(f'Message from {name} ({email}): {message}')
        return "Thanks for your message!"
    return render_template('contact.html')

if __name__ == '__main__':
    app.run(debug=True)




HTML TEMPLATES ;


INDEX HTML;

<!DOCTYPE html>
<html>
<head>
    <title>My Portfolio</title>
    <link rel="stylesheet" href="/static/style.css">
</head>
<body>
    <h1>About Me</h1>
    <p>Hello! I'm a developer passionate about building web applications.</p>
    <nav>
        <a href="/">Home</a> |
        <a href="/projects">Projects</a> |
        <a href="/contact">Contact</a>
    </nav>
</body>
</html>

PROCESYS HTML;

<!DOCTYPE html>
<html>
<head>
    <title>Projects</title>
    <link rel="stylesheet" href="/static/style.css">
</head>
<body>
    <h1>My Projects</h1>
    <ul>
        <li>Project 1: Portfolio Website</li>
        <li>Project 2: Weather App</li>
        <li>Project 3: Blog Platform</li>
    </ul>
    <a href="/">Back to Home</a>
</body>
</html>


CONTACT HTML;

<!DOCTYPE html>
<html>
<head>
    <title>Contact</title>
    <link rel="stylesheet" href="/static/style.css">
</head>
<body>
    <h1>Contact Me</h1>
    <form method="post">
        <label>Name:</label><br>
        <input type="text" name="name"><br>
        <label>Email:</label><br>
        <input type="email" name="email"><br>
        <label>Message:</label><br>
        <textarea name="message"></textarea><br>
        <input type="submit" value="Send">
    </form>
    <a href="/">Back to Home</a>
</body>
</html>


CSS;



body {
    font-family: Arial, sans-serif;
    margin: 20px;
    background-color: #f0f0f0;
}
h1 {
    color: #333;
}
nav a {
    margin: 10px;
    text-decoration: none;
    color: #007BFF;
}
form input, textarea {
    margin: 5px 0;
    width: 300px;
}


priject 2-calculator 


pyhtoncode-version 1-console based calculator(simple and fast)



def add(x, y):
    return x + y

def subtract(x, y):
    return x - y

def multiply(x, y):
    return x * y

def divide(x, y):
    if y == 0:
        return "Error! Division by zero."
    return x / y

print("Simple Calculator")
print("Select operation:")
print("1. Add")
print("2. Subtract")
print("3. Multiply")
print("4. Divide")

while True:
    choice = input("Enter choice (1/2/3/4): ")
    if choice in ('1', '2', '3', '4'):
        try:
            num1 = float(input("Enter first number: "))
            num2 = float(input("Enter second number: "))
        except ValueError:
            print("Invalid input. Please enter numbers.")
            continue

        if choice == '1':
            print("Result:", add(num1, num2))
        elif choice == '2':
            print("Result:", subtract(num1, num2))
        elif choice == '3':
            print("Result:", multiply(num1, num2))
        elif choice == '4':
            print("Result:", divide(num1, num2))

        next_calc = input("Do another calculation? (yes/no): ")
        if next_calc.lower() != 'yes':
            break
    else:
        print("Invalid Input")



version 2-calculator using tinker 



import tkinter as tk

def click(event):
    button_text = event.widget["text"]
    if button_text == "=":
        try:
            result = str(eval(entry.get()))
            entry.delete(0, tk.END)
            entry.insert(tk.END, result)
        except:
            entry.delete(0, tk.END)
            entry.insert(tk.END, "Error")
    elif button_text == "C":
        entry.delete(0, tk.END)
    else:
        entry.insert(tk.END, button_text)

root = tk.Tk()
root.title("Simple Calculator")

entry = tk.Entry(root, font=("Arial", 20), bd=10, insertwidth=2, width=14, borderwidth=4)
entry.grid(row=0, column=0, columnspan=4)

buttons = [
    "7", "8", "9", "/",
    "4", "5", "6", "*",
    "1", "2", "3", "-",
    "C", "0", "=", "+"
]

row = 1
col = 0
for btn_text in buttons:
    btn = tk.Button(root, text=btn_text, padx=20, pady=20, font=("Arial", 18))
    btn.grid(row=row, column=col, sticky="nsew")
    btn.bind("<Button-1>", click)
    col += 1
    if col == 4:
        row += 1
        col = 0

root.mainloop()





